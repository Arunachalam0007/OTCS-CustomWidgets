{"version":3,"sources":["../../src/widgets/noteview/impl/noteview.model.js","../../src/widgets/noteview/impl/noteview.model.factory.js","../../src/widgets/noteview/impl/notecomments!hbs","../../src/widgets/noteview/impl/utils/headerlayout!css","../../src/widgets/noteview/impl/leftRegion/notecomments.view.js","../../src/widgets/noteview/impl/utils/Utils.js","../../src/widgets/noteview/impl/viewerone!hbs","../../src/widgets/noteview/impl/centerRegion/viewerone.view.js","../../src/widgets/noteview/impl/rightregion/viewertwo!hbs","../../src/widgets/noteview/impl/rightregion/viewertwo.view.js","../../src/widgets/noteview/impl/nls/lang.js","../../src/widgets/noteview/impl/nls/root/lang.js","../../src/widgets/noteview/impl/noteview!hbs","../../src/widgets/noteview/impl/noteview!css","../../src/widgets/noteview/noteview.view.js","../../src/widgets/noteview/noteview.manifest.json!json","../../src/widgets/testing/impl/testing.model.js","../../src/widgets/testing/impl/testing.model.factory.js","../../src/widgets/testing/impl/nls/lang.js","../../src/widgets/testing/impl/nls/root/lang.js","../../src/widgets/testing/impl/testing!hbs","../../src/widgets/testing/impl/left!hbs","../../src/widgets/testing/impl/right!hbs","../../src/widgets/testing/impl/testing!css","../../src/widgets/testing/testing.view.js","../../src/widgets/testing/testing.manifest.json!json","otcsw-all.js"],"names":["csui","define","Backbone","Url","Model","extend","defaults","name","constructor","attributes","options","prototype","apply","this","arguments","connector","assignTo","url","combine","connection","parse","response","data","ModelFactory","ConnectorFactory","NoteviewModel","propertyPrefix","context","getObject","property","undefined","fetch","module","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","registerPartial","Marionette","$","RichTextEditor","SelectFieldView","ItemView","className","call","onRender","getDropdownItems","id","collection","Collection","model","isMultiFieldItem","selected","mode","alpaca","schema","title","type","setRequiredFieldsEditable","Utils","LayoutView","regions","selectDocument","selectField","showChildView","Template","root","en-us","en","helloMessage","waitMessage","_","NoteviewModelFactory","NoteCommentsView","ViewerOneView","ViewerTwoView","lang","leftRegion","centerRegion","rightRegion","$schema","description","kind","properties","TestingModel","TestingModelFactory","lefttemplate","Righttemplate","LeftView","RightView","ui","button","events","click @ui.button","onClickedButton","toggle","require","css","styleLoad"],"mappings":"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","file":"otcsw-all.js","sourcesContent":["csui.define('otcsw/widgets/noteview/impl/noteview.model',[\r\n  // MVC component support\r\n  'csui/lib/backbone',\r\n  // CS REST API URL parsing and combining\r\n  'csui/utils/url'\r\n], function (Backbone, Url) {\r\n  'use strict';\r\n\r\n  var NoteviewModel = Backbone.Model.extend({\r\n    // Declare model properties with default values\r\n    defaults: {\r\n      name: 'Unnamed'\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger\r\n    constructor: function NoteviewModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      // Enable this model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    // Computes the REST API URL using the connection options\r\n    url: function () {\r\n      // /auth returns information about the authenticated user\r\n      return Url.combine(this.connector.connection.url, '/auth');\r\n    },\r\n\r\n    // Massage the server response, so that it looks like object attributes\r\n    parse: function (response) {\r\n      // All attributes are placed below the `data` key\r\n      return response.data;\r\n    }\r\n  });\r\n\r\n  return NoteviewModel;\r\n});\r\n\n","csui.define('otcsw/widgets/noteview/impl/noteview.model.factory',[\r\n  'csui/utils/contexts/factories/factory',   // Factory base to inherit from\r\n  'csui/utils/contexts/factories/connector', // Factory for the server connector\r\n  'otcsw/widgets/noteview/impl/noteview.model'     // Model to create the factory for\r\n], function (ModelFactory, ConnectorFactory, NoteviewModel) {\r\n  'use strict';\r\n\r\n  var NoteviewModelFactory = ModelFactory.extend({\r\n    // Unique prefix of the default model instance, when this model is placed\r\n    // to a context to be shared by multiple widgets\r\n    propertyPrefix: 'noteview',\r\n\r\n    constructor: function NoteviewModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      // Obtain the server connector from the application context to share\r\n      // the server connection with the rest of the application; include\r\n      // the options, which can contain settings for dependent factories\r\n      var connector = context.getObject(ConnectorFactory, options);\r\n\r\n      // Expose the model instance in the `property` key on this factory\r\n      // instance to be used by the context\r\n      this.property = new NoteviewModel(undefined, {\r\n        connector: connector\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n      // Just fetch the model exposed by this factory\r\n      return this.property.fetch(options);\r\n    }\r\n  });\r\n\r\n  return NoteviewModelFactory;\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcsw/widgets/noteview/impl/notecomments',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<h2 id=\\\"title-header\\\">View Document One</h2>\\r\\n<h1>Hello Vashisht</h1>\";\n}});\nHandlebars.registerPartial('otcsw_widgets_noteview_impl_notecomments', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcsw/widgets/noteview/impl/utils/headerlayout',[],function(){});\n","csui.define('otcsw/widgets/noteview/impl/leftRegion/notecomments.view',[\r\n    'csui/lib/marionette',\r\n    'csui/lib/backbone',\r\n    'csui/lib/jquery',\r\n    'csui/controls/rich.text.editor/rich.text.editor',\r\n    \"csui/controls/form/fields/selectfield.view\",\r\n    'hbs!otcsw/widgets/noteview/impl/notecomments',\r\n    'css!otcsw/widgets/noteview/impl/utils/headerlayout'             // Stylesheet needed for this view\r\n\r\n], function(Marionette, Backbone, $, RichTextEditor, SelectFieldView, template) {\r\n\r\n    var NoteCommentsView = Marionette.ItemView.extend({\r\n        className: 'NoteComments',\r\n        template: template,\r\n        constructor: function NoteCommentsView(options) {\r\n            Marionette.ItemView.prototype.constructor.call(this, options);\r\n        },\r\n        onRender: function() {\r\n            \r\n        }\r\n\r\n\r\n    });\r\n    return NoteCommentsView;\r\n});\n","csui.define('otcsw/widgets/noteview/impl/utils/Utils',[\r\n  'csui/lib/backbone'\r\n],function(Backbone) {\r\n    var Utils = {\r\n        getDropdownItems: function() {\r\n        return {\r\n            id: \"selectField\",\r\n            collection: new Backbone.Collection({'id':1,name:'vashisht'}),\r\n            model: new Backbone.Model({\r\n              options: {\r\n                isMultiFieldItem: false,\r\n                selected: true,\r\n                mode: \"read\", // 'read', 'readonly', 'writeonly' ?\r\n              },\r\n            }),\r\n            mode: \"read\",\r\n            alpaca: {\r\n              schema: {\r\n                title: \"URL\",\r\n                type: \"string\",\r\n              },\r\n              options: {\r\n                setRequiredFieldsEditable: false,\r\n              },\r\n            },\r\n          };\r\n    }};\r\n    return Utils;\r\n    \r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcsw/widgets/noteview/impl/viewerone',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<h2 id=\\\"title-header\\\">View Document Two</h2>\\r\\n<div class = \\\"flex-containers\\\">\\r\\n    <div class=\\\"selectDocument-fieldname\\\">SelectDocument:  </div>\\r\\n    <div id=\\\"selectDocument\\\"></div>\\r\\n</div>\\r\\n<div id=\\\"viewer\\\"></div>\";\n}});\nHandlebars.registerPartial('otcsw_widgets_noteview_impl_viewerone', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('otcsw/widgets/noteview/impl/centerRegion/viewerone.view',[\r\n    'csui/lib/marionette',\r\n    'csui/lib/backbone',\r\n    'csui/lib/jquery',\r\n    \"csui/controls/form/fields/selectfield.view\",\r\n    \"otcsw/widgets/noteview/impl/utils/Utils\",\r\n    'hbs!otcsw/widgets/noteview/impl/viewerone',\r\n    'css!otcsw/widgets/noteview/impl/utils/headerlayout'             // Stylesheet needed for this view\r\n\r\n], function(Marionette, Backbone, $, SelectFieldView, Utils,template) {\r\n\r\n    var ViewerOneView = Marionette.LayoutView.extend({\r\n        className : 'ViewerOneView',\r\n        template: template,\r\n        regions: {\r\n            selectDocument: '#selectDocument'\r\n        },\r\n        constructor: function ViewerOneView(options){\r\n            Marionette.LayoutView.prototype.constructor.call(this, options);\r\n        },\r\n        onRender: function() {\r\n           var selectField = new SelectFieldView(Utils.getDropdownItems());\r\n           this.showChildView('selectDocument',selectField);\r\n         \r\n        }\r\n    });\r\n    return ViewerOneView;\r\n\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcsw/widgets/noteview/impl/rightregion/viewertwo',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<h2 id=\\\"title-header\\\">View Document Three</h2>\\r\\n<h1>Hello Arun</h1>\";\n}});\nHandlebars.registerPartial('otcsw_widgets_noteview_impl_rightregion_viewertwo', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('otcsw/widgets/noteview/impl/rightregion/viewertwo.view',[\r\n    'csui/lib/marionette',\r\n    'hbs!otcsw/widgets/noteview/impl/rightregion/viewertwo',\r\n    'css!otcsw/widgets/noteview/impl/utils/headerlayout'             // Stylesheet needed for this view\r\n\r\n],  function (Marionette, Template) {\r\n\r\n    var ViewerTwoView = Marionette.ItemView.extend({\r\n        className: 'viewerTwoView',\r\n        template: Template,\r\n        constructor: function (options){\r\n            Marionette.ItemView.prototype.constructor.call(this,options);\r\n        }\r\n    });\r\n\r\n    return ViewerTwoView;\r\n\r\n});\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('otcsw/widgets/noteview/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('otcsw/widgets/noteview/impl/nls/root/lang',{\r\n  helloMessage: 'Hello {0} {1}!',\r\n  waitMessage: 'One moment, please...'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcsw/widgets/noteview/impl/noteview',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"row\\\">\\r\\n    <div class =\\\"flex-container\\\">\\r\\n        <div class=\\\"column1\\\" id=\\\"leftRegion\\\">one</div>\\r\\n        <div class=\\\"column2\\\" id=\\\"centerRegion\\\">two</div>\\r\\n        <div class=\\\"column3\\\" id=\\\"rightRegion\\\">three</div>\\r\\n    </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('otcsw_widgets_noteview_impl_noteview', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcsw/widgets/noteview/impl/noteview',[],function(){});\n","csui.define('otcsw/widgets/noteview/noteview.view',[\r\n  'csui/lib/underscore',                           // Cross-browser utility belt\r\n  'csui/lib/marionette',                           // MVC application support\r\n  'otcsw/widgets/noteview/impl/noteview.model.factory', \r\n  'otcsw/widgets/noteview/impl/leftRegion/notecomments.view',\r\n  'otcsw/widgets/noteview/impl/centerRegion/viewerone.view',\r\n  'otcsw/widgets/noteview/impl/rightregion/viewertwo.view',\r\n  'i18n!otcsw/widgets/noteview/impl/nls/lang', \r\n  'hbs!otcsw/widgets/noteview/impl/noteview',            // Template to render the HTML\r\n  'css!otcsw/widgets/noteview/impl/noteview'             // Stylesheet needed for this view\r\n], function (_, Marionette, NoteviewModelFactory, NoteCommentsView, ViewerOneView, ViewerTwoView , lang, template) {\r\n  'use strict';\r\n\r\n  var NoteviewView = Marionette.LayoutView.extend({\r\n    className: 'otcsw--noteview panel panel-default',\r\n\r\n    template: template,\r\n    regions: {\r\n      leftRegion: '#leftRegion',\r\n      centerRegion: '#centerRegion',\r\n      rightRegion: '#rightRegion'\r\n    },\r\n\r\n    constructor: function NoteviewView(options) {\r\n      Marionette.LayoutView.prototype.constructor.call(this, options);\r\n\r\n    },\r\n    onRender: function() {\r\n      this.showChildView('leftRegion', new NoteCommentsView());\r\n      this.showChildView('centerRegion', new ViewerOneView());\r\n      this.showChildView('rightRegion', new ViewerTwoView());\r\n    }\r\n  });\r\n\r\n  return NoteviewView;\r\n});\r\n\n","\ncsui.define('json!otcsw/widgets/noteview/noteview.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"noteview\",\r\n  \"description\": \"Welcomes the current user.\",\r\n  \"kind\": \"fullpage\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","csui.define('otcsw/widgets/testing/impl/testing.model',[\r\n  // MVC component support\r\n  'csui/lib/backbone',\r\n  // CS REST API URL parsing and combining\r\n  'csui/utils/url'\r\n], function (Backbone, Url) {\r\n  'use strict';\r\n\r\n  var TestingModel = Backbone.Model.extend({\r\n    // Declare model properties with default values\r\n    defaults: {\r\n      name: 'Unnamed'\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger\r\n    constructor: function TestingModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      // Enable this model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    // Computes the REST API URL using the connection options\r\n    url: function () {\r\n      // /auth returns information about the authenticated user\r\n      return Url.combine(this.connector.connection.url, '/auth');\r\n    },\r\n\r\n    // Massage the server response, so that it looks like object attributes\r\n    parse: function (response) {\r\n      // All attributes are placed below the `data` key\r\n      return response.data;\r\n    }\r\n  });\r\n\r\n  return TestingModel;\r\n});\r\n\n","csui.define('otcsw/widgets/testing/impl/testing.model.factory',[\r\n  'csui/utils/contexts/factories/factory',   // Factory base to inherit from\r\n  'csui/utils/contexts/factories/connector', // Factory for the server connector\r\n  'otcsw/widgets/testing/impl/testing.model'     // Model to create the factory for\r\n], function (ModelFactory, ConnectorFactory, TestingModel) {\r\n  'use strict';\r\n\r\n  var TestingModelFactory = ModelFactory.extend({\r\n    // Unique prefix of the default model instance, when this model is placed\r\n    // to a context to be shared by multiple widgets\r\n    propertyPrefix: 'testing',\r\n\r\n    constructor: function TestingModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      // Obtain the server connector from the application context to share\r\n      // the server connection with the rest of the application; include\r\n      // the options, which can contain settings for dependent factories\r\n      var connector = context.getObject(ConnectorFactory, options);\r\n\r\n      // Expose the model instance in the `property` key on this factory\r\n      // instance to be used by the context\r\n      this.property = new TestingModel(undefined, {\r\n        connector: connector\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n      // Just fetch the model exposed by this factory\r\n      return this.property.fetch(options);\r\n    }\r\n  });\r\n\r\n  return TestingModelFactory;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('otcsw/widgets/testing/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('otcsw/widgets/testing/impl/nls/root/lang',{\r\n  helloMessage: 'Hello {0} {1}!',\r\n  waitMessage: 'One moment, please...'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcsw/widgets/testing/impl/testing',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"column1\\\" id=\\\"leftRegion\\\"></div>\\r\\n    <div class=\\\"column2\\\" id=\\\"rightRegion\\\">Teja</div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('otcsw_widgets_testing_impl_testing', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcsw/widgets/testing/impl/left',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<h1>hello</h1>\\r\\n<button class=\\\"myCollapseBtn\\\" id=\\\"left\\\">Collapse</button>\\r\\n\";\n}});\nHandlebars.registerPartial('otcsw_widgets_testing_impl_left', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!otcsw/widgets/testing/impl/right',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<h1 id=\\\"right\\\">hello</h1>\";\n}});\nHandlebars.registerPartial('otcsw_widgets_testing_impl_right', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!otcsw/widgets/testing/impl/testing',[],function(){});\n","// An application widget is exposed via a RequireJS module\r\ncsui.define('otcsw/widgets/testing/testing.view',[\r\n  \"csui/lib/underscore\", // Cross-browser utility belt\r\n  \"csui/lib/marionette\", // MVC application support\r\n  \"csui/lib/jquery\",\r\n  \"otcsw/widgets/testing/impl/testing.model.factory\", // Factory for the data model\r\n  \"i18n!otcsw/widgets/testing/impl/nls/lang\", // Use localizable texts\r\n  \"hbs!otcsw/widgets/testing/impl/testing\", // Template to render the HTML\r\n  \"hbs!otcsw/widgets/testing/impl/left\",\r\n  \"hbs!otcsw/widgets/testing/impl/right\",\r\n  \"css!otcsw/widgets/testing/impl/testing\", // Stylesheet needed for this view\r\n], function (_, Marionette, $, TestingModelFactory, lang, template, lefttemplate, Righttemplate) {\r\n  \"use strict\";\r\n  var LeftView =  Marionette.ItemView.extend({\r\n    className: \"otcsw--left panel panel-default\",\r\n    template: lefttemplate,\r\n  });\r\n\r\n  var RightView =  Marionette.ItemView.extend({\r\n    className: \"otcsw--right panel panel-default\",\r\n    template: Righttemplate,\r\n  });\r\n\r\n  var TestingView = Marionette.LayoutView.extend({\r\n    className: \"otcsw--testing panel panel-default\",\r\n    template: template,\r\n    regions: {\r\n      leftRegion: '#leftRegion',\r\n      rightRegion: '#rightRegion'\r\n    },\r\n    ui: {\r\n      button: \".myCollapseBtn\",\r\n    },\r\n    events: {\r\n      \"click @ui.button\": \"onClickedButton\",\r\n    },\r\n    onClickedButton: function(){\r\n      this.$('.column1').toggle();\r\n  \r\n      //this.$( \".otcsw--testing panel panel-default\" ).removeClass( this.$(\".column2\") );\r\n\r\n      //  this.$('.otcsw--left panel panel-default').toggleClass( className, addOrRemove );\r\n      //   if ( addOrRemove ) {\r\n      //     $( \"#\" ).addClass( className );\r\n      //   } else {\r\n      //     $( \"#foo\" ).removeClass( className );\r\n      //   }\r\n    },\r\n    onRender: function() {\r\n      this.showChildView('leftRegion', new LeftView());\r\n      this.showChildView('rightRegion', new RightView());\r\n    }\r\n  });\r\n\r\n  return TestingView;\r\n});\r\n\n","\ncsui.define('json!otcsw/widgets/testing/testing.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"testing\",\r\n  \"description\": \"Welcomes the current user.\",\r\n  \"kind\": \"fullpage\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","// Placeholder for the build target file; the name must be the same,\r\n// include public modules from this component\r\n\r\ncsui.define('bundles/otcsw-all',[\r\n  // add public files for this module here\r\n  'otcsw/widgets/noteview/noteview.view',\r\n  'json!otcsw/widgets/noteview/noteview.manifest.json',\r\n  \"otcsw/widgets/testing/testing.view\",\r\n  'json!otcsw/widgets/testing/testing.manifest.json',\r\n], {});\r\n\r\ncsui.require([\r\n  'require',\r\n  'css'\r\n], function (require, css) {\r\n  // Load the bundle-specific stylesheet\r\n  css.styleLoad(require, 'otcsw/bundles/otcsw-all');\r\n});\r\n\n"]}